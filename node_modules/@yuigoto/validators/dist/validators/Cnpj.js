"use strict";
exports.__esModule = true;
var Utils_1 = require("../utils/Utils");
var Expressions_1 = require("../core/Expressions");
var Cnpj = (function () {
    function Cnpj() {
    }
    Cnpj.filter = function (value) {
        value = Utils_1.SanitizeToDigitsWithAssertion(value);
        if (!value)
            return "";
        if (value.length > 14)
            value = value.substring(0, 14);
        var slices = Expressions_1.CnpjMask.exec(value), returnable = "";
        if (slices[1] === undefined)
            return "";
        returnable += slices[1];
        if (slices[2] !== undefined)
            returnable += "." + slices[2];
        if (slices[3] !== undefined)
            returnable += "." + slices[3];
        if (slices[4] !== undefined)
            returnable += "/" + slices[4];
        if (slices[5] !== undefined)
            returnable += "-" + slices[5];
        return returnable;
    };
    Cnpj.format = function (value) {
        value = Utils_1.SanitizeToDigitsWithAssertion(value);
        if (!value)
            return false;
        if (value.length > 14)
            value = value.substring(0, 14);
        if (value.length < 14)
            value = Utils_1.PadWithZeroes(value, 14);
        return value.replace(Expressions_1.Cnpj, "$1.$2.$3/$4-$5");
    };
    Cnpj.validate = function (value) {
        value = Utils_1.SanitizeToDigitsWithAssertion(value);
        if (value === false)
            return false;
        if (value.length > 14)
            value = value.substring(0, 14);
        if (value.length < 14)
            value = Utils_1.PadWithZeroes(value, 14);
        if (Utils_1.CheckNumberRepetition(value, 14))
            return false;
        var sum, val;
        sum = 0;
        val = 5;
        for (var l = 0; l < 12; l++) {
            sum += parseInt(value[l]) * val;
            val = ((val - 1) === 1) ? 9 : val - 1;
        }
        val = (sum % 11 < 2) ? 0 : 11 - (sum % 11);
        if (value[12] !== val.toString())
            return false;
        sum = 0;
        val = 6;
        for (var l = 0; l < 13; l++) {
            sum += parseInt(value[l]) * val;
            val = ((val - 1) === 1) ? 9 : val - 1;
        }
        val = (sum % 11 < 2) ? 0 : 11 - (sum % 11);
        if (value[13] !== val.toString())
            return false;
        return true;
    };
    return Cnpj;
}());
exports.Cnpj = Cnpj;
