import { CtrlChangeCallback, CtrlCallback, CtrlProps, CtrlOptionItem } from "../core/Types";
export declare class Ctrl {
    [key: string]: any;
    private _value;
    name: string;
    alias: string;
    infoText: string;
    description: string;
    label: string;
    autocomplete: boolean;
    disabled: boolean;
    options: CtrlOptionItem[];
    state: number;
    dirty: boolean;
    placeholder: string;
    type: number;
    custom: boolean;
    customClass: string;
    wrapClass: string;
    onChange: CtrlChangeCallback | null;
    interceptors: CtrlCallback | CtrlCallback[];
    message: string;
    required: boolean;
    requiredMessage: string;
    maxLength: number;
    maxLengthMessage: string;
    minLength: number;
    minLengthMessage: string;
    maxAnswers: number;
    maxAnswersMessage: string;
    minAnswers: number;
    minAnswersMessage: string;
    regex: RegExp;
    regexMessage: string;
    dateMessage: string;
    cnpjMessage: string;
    cpfMessage: string;
    pisMessage: string;
    creditCardMessage: string;
    emailMessage: string;
    urlMessage: string;
    cols: number;
    rows: number;
    constructor(props: CtrlProps);
    get interceptor(): CtrlCallback | CtrlCallback[];
    set interceptor(value: CtrlCallback | CtrlCallback[]);
    get value(): any;
    set value(value: any);
    applyInterceptors(value: any): any;
    getType(): string;
    invalidate(message?: string): Ctrl;
    isValueSelected(option: any): boolean;
    onBooleanChange(value: boolean): void;
    onValueChange(value: any): void;
    onValueToggle(value: any): void;
    toJSON(): object;
    toString(): string;
    validate(): boolean;
    resetState(clean?: boolean): void;
    private validateRequired;
    private validateMinLength;
    private validateMaxLength;
    private validateMinAnswers;
    private validateMaxAnswers;
    private validateRegex;
    private validateDate;
    private validateEmail;
    private validateUrl;
    private validateCnpj;
    private validateCpf;
    private validatePis;
    private validateCreditCard;
}
